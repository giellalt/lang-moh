#this script contains variables used by all alternation rules
# it must be run before any of the rules

set flag-is-epsilon ON

define ppMarker %^PP%-%^; # marks the start of the personal prefix
define rootBM %^R%-%^; # root boundary marker

define verbTypeFG "@U.VerbType."[{Red}|{Blue}|{Purple}]"@"; # captures flag diacritis marking verb type

#conjugation classes of verbs
define ccClassFG "@" [P|R] ".CC." [{One}|{Two}|{Three}|{Four}|{Five}|{Six}|{Seven}|{Eight}|{Nine}] "@" ;


define habAspect "@U.Aspect."{Habitual}"@";
define commandAspect "@U.Aspect."{Command}"@";
define punctAspect "@U.Aspect."{Punct}"@";
define perfAspect "@U.Aspect."{Perf}"@";


define punctMarker %^P%^;
define perfMarker %^R%^;
define habMarker %^H%^;
define comMarker %^C%^;

#
#Rules for replacing c-stem forms of active (RED) bound pronouns with the correct form (be it A, E, I or O)
#
#


#Agent I (ke)
define keCore  {ke}-> k || ppMarker _ rootBM [ a | e | i | o ] ; 
define keExc {ke} -> k || ppMarker _ rootBM [ h | y | k ] ; 




# agent you (se)
define seCore  {se} -> {s} || ppMarker _ rootBM [a | e | o] ,,
{se} -> {ts} || ppMarker _ rootBM [i] ,,
{se} -> {it} || ppMarker _ rootBM {hs};

define seExc {se} -> s || ppMarker _ rootBM [ h | y | k ] ;
define seExcPrefix {se}  -> {hse} || [?+ (verbverbTypeFG) ppMarker] _ rootBM,,
    s -> {hs} || [?+ (verbverbTypeFG) ppMarker] _ rootBM,,
    {ts} -> {hs} || [?+ (verbverbTypeFG) ppMarker] _ rootBM,,
    {it} -> {t} || [?+ (verbverbTypeFG) ppMarker] _ rootBM;



# agent he (ra)
define raCore {ra} -> {r} || ppMarker _ rootBM [a | e | o] ,,
{ra} -> {ren} || ppMarker _ rootBM [i];

define raExc {ra} -> {ha} || [?+ (verbTypeFG) ppMarker] _ [t i ]^{0,1} rootBM ,,
{ron} -> {hon} || [?+ (verbTypeFG) ppMarker] _ [n]^{0,1} rootBM ,,
r -> {hr} || [?+ (verbTypeFG) ppMarker] _ rootBM [e | o];

#agent she (ye)
define yeCore {ye} -> {yon} || ppMarker _ rootBM [a],,
{ye} -> {yak} || ppMarker _ rootBM [e | o];

#agent it (ka)
define kaCore {ka} -> {w} || ppMarker _ rootBM [a | e ],,
{ka} -> {ken} || ppMarker _ rootBM [i],,
{ka} -> {y} || ppMarker _ rootBM [o];

# agent you and I (teni)
define teniCore {teni}-> {ty} || ppMarker _ rootBM [a ] ,,
{teni}-> {ten} || ppMarker _ rootBM [i | e | o];

# agent smb and I (yakeni)
define yakeniCore {yakeni}-> {yaken} || ppMarker _ rootBM [ i | e | o] ,,
{yakeni}-> {yaky} || ppMarker _ rootBM [a] ;

# agent you two (seni)
define seniCore {seni}-> {sen} || ppMarker _ rootBM [ i | e | o] ,,
{seni}-> {tsy} || ppMarker _ rootBM [a] ;

# agent 2 males (ni)
define hniCore {hni}-> {hn} || ppMarker _ rootBM [ i | e | o] ,,
{hni}-> {hy} || ppMarker _ rootBM [a] ;

define hniExc h -> 0 || [ .#. (verbTypeFG) ppMarker] _ [n [i]^{0,1}] | y rootBM;

# agent 2 females (keni)
define keniCore  {keni}-> {ken} || ppMarker _ rootBM [ i | e | o] ,,
{keni}-> {ky} || ppMarker _ rootBM [a] ;

# agent you all and I (tewa)
define tewaCore {tewa}-> {tew} || ppMarker _ rootBM [ a | e] ,,
{tewa}-> {tewen} || ppMarker _ rootBM [i],,
{tewa}-> {ty} || ppMarker _ rootBM [o] ;

# agent they and I (yakwa)
define yakwaCore {yakwa}-> {yakw} || ppMarker _ rootBM [ a | e] ,,
{yakwa}-> {yakwen} || ppMarker _ rootBM [i],,
{yakwa}-> {yaky} || ppMarker _ rootBM [o] ;

# agent all of you (sewa)
define sewaCore {sewa}-> {sew} || ppMarker _ rootBM [ a | e] ,,
{sewa}-> {sewen} || ppMarker _ rootBM [i],,
{sewa}-> {tsy} || ppMarker _ rootBM [o] ;

# agent they males/mixed (rati)
define ratiCore {rati}-> {ron} || ppMarker _ rootBM [ a ] ,,
{rati}-> {ronn} || ppMarker _ rootBM [i | e | o] ;

# agent they females (konti)
define kontiCore {konti}-> {kon} || ppMarker _ rootBM [ a ] ,,
{konti}-> {konn} || ppMarker _ rootBM [i | e | o] ;



define coreRed keCore .o. seCore .o. raCore .o. yeCore .o. teniCore .o. yakeniCore .o. seniCore .o. hniCore .o. keniCore .o. tewaCore .o. yakwaCore .o. sewaCore .o. ratiCore .o. kontiCore .o. kaCore;

define exceptRed keExc .o. seExc .o. seExcPrefix .o. raExc .o. hniExc;

define reWriteRed coreRed .o. exceptRed ;

#################################################################

#rules for replacing passive (blue) personal pronouns from their canonical c-verb forms into the one matching the following morpheme

#correspond to the tables on pages 3-6 of Unit 1

#Patient I (wake)
define wakeCore  {wake}-> {wak} || ppMarker _ rootBM [ a | e | i | o ] ; 
define wakeExc {wake} -> {wak} || ppMarker _ rootBM [ h | y | k ] ; 

# Patient you (sa)
define saCore  {sa} -> {s} || ppMarker _ rootBM [a | e | o] ;
define saCoreI [ ppMarker {sa} rootBM i] ->  ppMarker {sen} rootBM;

# Patient he (ro)
define roAI [ ppMarker {ro} rootBM [a | i]] -> ppMarker {ro} rootBM;
define roE {ro} -> {raw} || ppMarker _ rootBM [e] ;
define roO {ro} -> {ra} || ppMarker _ rootBM [o] ;

# Patient she (yako)
define yakoAI [ ppMarker {yako} rootBM [a | i]] -> ppMarker {yako} rootBM;
define yakoE {yako} -> {yakaw} || ppMarker _ rootBM [e] ;
define yakoO {yako} -> {yaka} || ppMarker _ rootBM [o] ;

# Patient it (yo)
define yoAI [ ppMarker {yo} rootBM [a | i]] -> ppMarker {yo} rootBM;
define yoE {yo} -> {yaw} || ppMarker _ rootBM [e] ;
define yoO {yo} -> {ya} || ppMarker _ rootBM [o] ;

#Patient both of us (yonkeni)
define yonkeniCore  {yonkeni}-> {yonky} || ppMarker _ rootBM [ a ] ,,
{yonkeni}-> {yonken} || ppMarker _ rootBM [ i | e | o ]; 

#patient plural (M + F)
define rotiCore {roti} -> {ron} || ppMarker _ rootBM [ a | e | o ];
define rotiI {roti} -> {rot} || ppMarker _ rootBM [ i ];

#patient plural females
define yotiCore {yoti} -> {yon} || ppMarker _ rootBM [ a | e | o ];
define yotiI {yoti} -> {yot} || ppMarker _ rootBM [ i ];

#patient all of us (they and I or you all and I), yonkwa
define yonkwaAE {yonkwa} -> {yonkw} || ppMarker _ rootBM [ a | e  ];
define yonkwaO {yonkwa} -> {yonky} || ppMarker _ rootBM [o];
define yonkwaI [ ppMarker {yakwa} rootBM [i]] -> ppMarker {yonkwen} rootBM;

define coreBlue wakeCore .o. saCore .o. saCoreI .o. roAI .o. roE .o. roO .o. yakoAI .o. yakoE .o. yakoO .o. yoAI .o. yoE .o. yoO .o. yonkeniCore .o. rotiCore .o. rotiI .o. yotiCore .o. yotiI .o. yonkwaAE .o. yonkwaO .o. yonkwaI;

define exceptBlue wakeExc ;

define reWriteBlue coreBlue .o. exceptBlue ;

#####################################################################################


#rules for replacing "transitive" (purple) personal pronouns from their canonical c-verb forms into the one matching the following morpheme

#correspond to the tables on pages 7-8 of Unit 1

# me->you (kon)
define konCore  {kon}-> {kony} || ppMarker _ rootBM [ a | e | o ] ; 
define konI [ ppMarker {kon} rootBM [i]] -> ppMarker {kon} rootBM;

#me -> him (ri)
define riCore {ri}-> {riy} || ppMarker _ rootBM [ a | e | o ] ; 
define riI {ri}-> {r} || ppMarker _ rootBM [ i ];

#me -> her/them (khe)
define kheCore  {khe}-> {khey} || ppMarker _ rootBM [ a | e | o ] ; 
define kheI [ ppMarker {khe} rootBM [i]] -> ppMarker {khe} rootBM;

#me -> you two (keni)
define keniCore {keni}-> {ken} || ppMarker _ rootBM [ i | e | o ] ; 
define keniA {keni}-> {ky} || ppMarker _ rootBM [ a ];

#me -> you all; they & I -> you (kwa)
define kwaCore  {kwa}-> {kw} || ppMarker _ rootBM [ a | e  ] ; 
define kwaI [ ppMarker {kwa} rootBM [i]] -> ppMarker {kwen} rootBM;
define kwaO  {kwa}-> {ky} || ppMarker _ rootBM [ o  ] ; 

#you -> me (take)
define takeCore {take}-> {tak} || ppMarker _ rootBM [ i | e | o | h | y] ; 
define takeA {take}-> {takw} || ppMarker _ rootBM [ a ];

#you -> him (etshe)
define etsheCore {etshe}-> {etsh} || ppMarker _ rootBM [ a| i | e | o | h | y] ;



#you -> her, them (she)
define sheCore  {she}-> {shey} || ppMarker _ rootBM [ a | e | o ] ; 
define sheI [ ppMarker {she} rootBM [i]] -> ppMarker {she} rootBM;
define prefShe {she} -> {hshe} || [?+ (verbverbTypeFG) ppMarker] _ rootBM;

#you -> them and I; you all -> me (takwa)
define takwaCore  {takwa}-> {taky} || ppMarker _ rootBM [ a | o  ] ; 
define takwaI [ ppMarker {takwa} rootBM [i]] -> ppMarker {takwen} rootBM;
define takwaE  {takwa}-> {takw} || ppMarker _ rootBM [ e  ] ; 

#you and I -> him (etshiteni)
define etshiteniCore {etshiteni}-> {etshiten} || ppMarker _ rootBM [  i | e | o ] ;
define etshiteniA {etshiteni}-> {etshity} || ppMarker _ rootBM [  a ] ;

#us -> her, them (yethi)
define yethiCore  {yethi}-> {yethiy} || ppMarker _ rootBM [ a | e | o ] ; 
define yethiI [ ppMarker {yethi} rootBM [i]] -> ppMarker {yeth} rootBM;

#you two -> me (takeni)
define takeniCore {takeni}-> {taken} || ppMarker _ rootBM [ i | e | o ] ; 
define takeniA {takeni}-> {taky} || ppMarker _ rootBM [ a ];

#you two -> him (etshiseni)
define etshiseniCore {etshiseni}-> {etshisen} || ppMarker _ rootBM [  i | e | o ] ;
define etshiseniA {etshiseni}-> {etshitsy} || ppMarker _ rootBM [  a ] ;

#you all and I -> him (etshitewa)
define etshitewaCore  {etshitewa}-> {etshitew} || ppMarker _ rootBM [ a | e | o ] ; 
define etshitewaI [ ppMarker {etshitewa} rootBM [i]] -> ppMarker {etshitewen} rootBM;

#you all -> him (etshisewa)
define etshisewaCore  {etshisewa}-> {etshisew} || ppMarker _ rootBM [ a | e | o ] ; 
define etshisewaI [ ppMarker {etshisewa} rootBM [i]] -> ppMarker {etshisewen} rootBM;


define corePurple konCore .o. konI .o. riCore .o. riI .o. kheCore .o. kheI .o. keniCore .o. keniA .o. kwaCore .o. kwaI .o. kwaO .o. takeCore .o. takeA .o. etsheCore .o. sheCore .o. sheI .o. prefShe .o. takwaCore .o. takwaI .o. takwaE .o. etshiteniCore.o. etshiteniA .o. yethiCore .o. yethiI .o. takeniCore .o. takeniA .o. etshiseniCore.o. etshiseniA .o. etshitewaCore .o. etshitewaI .o. etshisewaCore .o. etshisewaI;




define reWritePurple corePurple ;

#######################################################################################


define removeAll [rootBM | ppMarker | punctMarker | perfMarker | habMarker | comMarker | futPref | condPref | pastPref] -> 0;

#######################################################################################



regex reWriteRed .o. reWriteBlue .o. reWritePurple;
